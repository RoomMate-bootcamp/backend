"""initial migration

Revision ID: 84a5c47647d6
Revises: 
Create Date: 2025-05-19 00:33:14.392433

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '84a5c47647d6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('user_metadata', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('occupation', sa.String(), nullable=True),
    sa.Column('avatar', sa.String(), nullable=True),
    sa.Column('bio', sa.String(), nullable=True),
    sa.Column('interests', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('cleanliness_level', sa.Integer(), nullable=True),
    sa.Column('sleep_habits', sa.String(), nullable=True),
    sa.Column('rent_budget', sa.Integer(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('smoking_preference', sa.String(), nullable=True),
    sa.Column('pet_preference', sa.String(), nullable=True),
    sa.Column('study_location', sa.String(), nullable=True),
    sa.Column('study_program', sa.String(), nullable=True),
    sa.Column('accommodation_preference', sa.Enum('APARTMENT', 'DORMITORY', 'NO_PREFERENCE', name='accommodationpreference', native_enum=False), nullable=True),
    sa.Column('telegram_username', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('likes',
    sa.Column('liker_id', sa.Integer(), nullable=False),
    sa.Column('liked_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'ACCEPTED', 'DECLINED', name='likestatus'), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['liked_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['liker_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('matchs',
    sa.Column('user1_id', sa.Integer(), nullable=False),
    sa.Column('user2_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['user1_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user2_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notifications',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('NEW_LIKE', 'MATCH_CREATED', 'NEW_MESSAGE', name='notificationtype'), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('related_user_id', sa.Integer(), nullable=True),
    sa.Column('related_entity_id', sa.Integer(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['related_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('notifications')
    op.drop_table('matchs')
    op.drop_table('likes')
    op.drop_table('users')
    # ### end Alembic commands ###
